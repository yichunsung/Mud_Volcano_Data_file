Sys.setlocale(category = "LC_ALL", locale = "cht")
dataMRT <- read.csv("c:/mrt/mrt2.csv", stringsAsFactors=FALSE)
setwd("c:\NTUTrainRL1\mrt")
setwd("c:/NTUTrainRL1/mrt")
Sys.setlocale(category = "LC_ALL", locale = "cht")
dataMRT <- read.csv("mrt2.csv", stringsAsFactors=FALSE)
View(dataMRT)
?c#查看一下c這個函數
setwd('c:/R/Mud_Volcano_Data_file') #Change the wd path for yourself!!!!
Sys.setlocale(category = "LC_ALL", locale = "")
mv_data <- read.csv("mv001.csv", header= T, sep=",") #loading Mud Volcano Data
# Change the Data.Frame header name
names(mv_data)#print the row
names(mv_data)[1:12] <-
c("sample_day",
"site",
"Ar_conc",
"N2_conc",
"CO_conc",
"CH4_conc",
"CO2_conc",
"C2H6_conc",
"C3H8_conc",
"He_conc",
"H2_conc",
"O2_conc")
WD_MV <- subset(mv_data, site=="WD")
WD_MV_CH4 <- subset(WD_MV, CH4_conc!="")
WD_MV_CH4$CH4_conc <- c(0, 0, 33.64, 29.89)
View(WD_MV_CH4)
WD_MV_CH4[,1]
WD_MV_CH4[1,]
WD_MV_CH4[,1]
WD_MV_CH4[,2]
date <- as.Date(dataMRT[, 1], "%Y/%m/%d")
number <- dataMRT[, -1]
View(number)
View(dataMRT)
ncol(number)
for(index in 1:ncol(number)){
col <- number[, index]
colNew <- gsub(',', '', col)# gsub every column
colNum <- as.integer(colNew)# Transform into integer
result[[index]] <- colNum# Insert into list
}
resultDF <- data.frame(result)# Transform into dataframe
result <- list()
for(index in 1:ncol(number)){
col <- number[, index]
colNew <- gsub(',', '', col)# gsub every column
colNum <- as.integer(colNew)# Transform into integer
result[[index]] <- colNum# Insert into list
}
resultDF <- data.frame(result)# Transform into dataframe
View(resultDF)
colnames(resultDF) <- c('松山機場','中山國中','南京復興','忠孝復興','大安','科技大樓','六張犁','麟光','辛亥','萬芳醫院','萬芳社區','木柵','動物園','大直','劍南路','西湖','港墘','文德','內湖','大湖公園','葫洲','東湖','南港軟體園區','南港展覽館','小碧潭','新店','新店區公所','七張','大坪林','景美','萬隆','公館','台電大樓','古亭','中正紀念堂','小南門','頂溪','永安市場','景安','南勢角','台大醫院','台北車站','中山','雙連','民權西路','圓山','劍潭','士林','芝山','明德','石牌','唭哩岸','奇岩','北投','新北投','復興崗','忠義','關渡','竹圍','紅樹林','淡水','頂埔','永寧','土城','海山','亞東醫院','府中','板橋','新埔','江子翠','龍山寺','西門','善導寺','忠孝新生','忠孝敦化','國父紀念館','市政府','永春','後山埤','昆陽','南港','象山','台北101/世貿','信義安和','大安森林公園','北門','松江南京','台北小巨蛋','南京三民','松山','輔大','新莊','頭前庄','先嗇宮','三重','菜寮','台北橋','大橋頭','中山國小','行天宮','東門','蘆洲','三民高中','徐匯中學','三和國中','三重國小','迴龍','丹鳳')
finalResult <- cbind(date, resultDF)# Final result
# Output
View(finalResult)
x00_new <- as.numeric(as.vector(pd_CH4_draw$X10))
setwd('c:/R/Mud_Volcano_Data_file') #Change the wd path for yourself!!!!
Sys.setlocale(category = "LC_ALL", locale = "")
pd_air <- read.csv("pd2015.csv", header = T, sep=",") #Loading pd station 2015 Air Data
names(pd_air)
names(pd_air)[1:3] <- c("day", "site", "no")
summary(pd_air)
pd_CH4 <- subset(pd_air, no=="CH4")#subset!
pd_CH4_draw <- subset(pd_CH4, X00!="")
summary(pd_CH4)
x00_new <- as.numeric(as.vector(pd_CH4_draw$X00))
pd_CH4_new<- cbind(pd_CH4_draw, x00_new)
pd_CH4_new1 <- subset(pd_CH4_new, x00_new!="NA")
day_new <- c(1:360)
pd_CH4_new2<- cbind(pd_CH4_new1, day_new)
pd_CH4_new2$asDate <- as.Date(pd_CH4_new2$day, "%Y/%m/%d")
x00_new <- as.numeric(as.vector(pd_CH4_draw$X10))
ccNew <- gsub('#', '', pd_CH4_draw$X10)
x00_new <- as.numeric(as.vector(ccNew))
ccNew
ccNew0 <- gsub('*', '', ccNew)
ccNew0
ccNew0 <- gsub('*', '', ccNew)
ccNew0
ccNew01 <- gsub('*', '', ccNew0)
ccNew01
col <- number[, 1]
col
colNew <- gsub(',', '', col)
colNew
colNum <- as.integer(colNew)
colNum
View(mv_data)
View(pd_CH4_draw)
testA <- gsub('#', "", pd_CH4_draw)
testA
test0 <- pd_CH4_draw[, 2]
View(pd_CH4_draw)
test0 <- pd_CH4_draw[, 4]
test0
testA <- gsub('X', "", pd_CH4_draw)
testA
testA <- gsub('X', "", test0)
testA
testA <- gsub('*', "", test0)
testA <- gsub('*', "", test0)
testA
testA <- gsub('-0.2*', "", test0)
testA
colNum <- as.integer(testA)
testA <- subset(test0, "*")
View(pd_CH4_draw)
test2 <- as.numeric(as.vector(pd_CH4_draw[1,4]))
test2
pd_CH4_draw[1,4]
pd_CH4_draw[,4]
test2 <- as.numeric(as.vector(pd_CH4_draw[1,4]))
newFrameofTestMV <- pd_CH4_draw[4:27]
View(newFrameofTestMV)
hour <-c(0:23)
hour
colnames(newFrameofTestMV) <- c(0:23)
View(number)
ncol(number)
View(number)
ncol(newFrameofTestMV)
nrow(newFrameofTestMV)
a1 <-newFrameofTestMV[1,]
a1
a1 <-newFrameofTestMV[2,]
a1
a1[1]
a1[2]
a1 <-newFrameofTestMV[,1]
a1
a1[1]
a1[2]
a1[3]
data1 <- newFrameofTestMV[, 1]
data1
data1[242]
is.vector(data1[242])
is.vector(data1[243])
as.vector(data1[242])
as.numeric(as.vector(data1[242]))
is.numeric(as.numeric(as.vector(data1[242])))
is.numeric(as.numeric(as.vector(data1[242])))
as.numeric(as.vector(data1[242]))
for (i in 1:nco1(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data))
if(data3=="NA"){
data3==0
}
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data))
if(data3=="NA"){
data3==0
}
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data))
if(data3=="NA"){
data3==0
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
if(data3=="NA"){
data3==0
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
#if(data3=="NA"){
# data3==0
# }
}
}
warnings()
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
#if(data3=="NA"){
# data3==0
# }
}
}
as.numeric(as.vector(data1[242]))
data1 <- newFrameofTestMV[, 1]
data1 <- newFrameofTestMV[, 1]
as.numeric(as.vector(data1[242]))
colNew <- gsub(',', '', data1)
colNew
colNew <- gsub('*', '', data1)
colNew
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
if(data3==NA) {
data3=0
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
if(data3=NA) {
data3=0
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
if(data3 = NA) {
data3=0
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
if(data3 = NA) {
data3 <- 0
}
}
}
for (i in 1:ncol(newFrameofTestMV)){
data1 <- newFrameofTestMV[, i]
for (j in 1:nrow(newFrameofTestMV)){
data2 <- data1[j]
data3 <- as.numeric(as.vector(data2))
if(data3 = NA) {
data3 <-c(0)
}
}
}
data1 <- newFrameofTestMV[, 1]
data1
data1[1]
data3 <- as.numeric(as.vector(data1[1]))
data3
aa<-data.frame()
aa
aa[1] <- data3
aa[1,1] <- data3
aa
View(aa)
View(aa)
g<-c()
g[1]<-data3
g2<-cbind(g, data3)
cbind(g, data3)
cbind(g, data3)
g[3]<-cbind(g, data3)
g[3]<-cbind(data3)
g
g[2]<-cbind(data3)
g
g[4]<-cbind(data3)
g
g[4]<-cbind("123")
g
data3 <-c(0)
data3
newFrameCH4 <- data.frame()
newFrameCH4[1] <- g
newFrameCH4[, 1] <- g
g
g <-c(1:2)
newFrameCH4[, 1] <- g
newFrameCH4[1] <- g
newFrameCH4[1, ] <- g
newFrameCH4[1] <- cbind(g)
install.packages("plotly")
library(plotly)
View(pd_CH4_new2)
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=asDate, y=x00_new)
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=asDate, y=x00_new)
asDate
pd_CH4_new2$asDate
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=pd_CH4_new2$asDate, y=pd_CH4_new2$x00_new)
plotly_pdStatMethane
}
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=pd_CH4_new2$asDate, y=pd_CH4_new2$x00_new, type="scatter", mode="marker"+"line")
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=pd_CH4_new2$asDate, y=pd_CH4_new2$x00_new, type="scatter", mode="markers"+"line")
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=pd_CH4_new2$asDate, y=pd_CH4_new2$x00_new, type="scatter", mode="markers"+"lines")
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=pd_CH4_new2$asDate, y=pd_CH4_new2$x00_new, type="scatter", mode="markers+lines")
plotly_pdStatMethane
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=pd_CH4_new2$asDate, y=pd_CH4_new2$x00_new, type="scatter", mode="lines")
plotly_pdStatMethane
is.na(pd_CH4_new2)
plotly_pdStatMethane <- plot_ly(pd_CH4_new2, x=pd_CH4_new2$asDate, y=pd_CH4_new2$x00_new, type="scatter", mode="lines", color="lightgreen")
plotly_pdStatMethane
